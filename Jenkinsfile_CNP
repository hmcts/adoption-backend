#!groovy

@Library("Infrastructure")
import uk.gov.hmcts.contino.ProjectBranch

def type = "java"

def product = "adoption"
def component = "backend"

static Map<String, Object> secret(String secretName, String envVariable) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    envVariable: envVariable
  ]
}

def otherSecrets = [
  's2s-${env}': [
    secret('microservicekey-ccd-gw', 'CCD_API_GATEWAY_S2S_SECRET'),
    secret('microservicekey-ccd-data', 'CCD_DATA_STORE_S2S_SECRET'),
    secret('microservicekey-ccd-definition', 'CCD_DEFINITION_STORE_S2S_SECRET')
  ],
  'ccd-${env}': [
    secret('ccd-api-gateway-oauth2-client-secret', 'CCD_API_GATEWAY_IDAM_CLIENT_SECRET'),
    secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN')
  ]
]

withPipeline(type, product, component) {

  enableAksStagingDeployment()
  disableLegacyDeployment()
  installCharts()
  enableSlackNotifications('#fpla_adoption_tech')

  env.PROXY_SERVER = "proxyout.reform.hmcts.net:8080"

  onPR {
    loadVaultSecrets(otherSecrets)
  }

  before('smoketest:aat') {
      env.URL = "https://adoption-backend-staging.service.core-compute-aat.internal"
    }

  before('smoketest:preview') {
    env.URL="https://adoption-backend-pr-${CHANGE_ID}.service.core-compute-preview.internal"
  }
}
